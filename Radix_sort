public class RadixSort {
  public static void main(String[] args) {
    // int[] a = {170,45,75,90,802,2};
    int[] a = {170,45,75,90,802,24,2,66};

    Radix_Sort(a);
    display(a);

  }
  static void display(int[] a)
  {
    for (int pp:a)
    {
      System.out.print(pp+" ");
    }
  }
  static int f(int[] a)
  {
    int max=Integer.MIN_VALUE;
    for (int i=0;i<a.length;i++)
    {
      max=Math.max(max,a[i]);
    }
    return max;
  }
  static void Radix_Sort(int[] a)
  {
    int n = a.length;
    int max = f(a);
    for (int place = 1;(max/place)>0;place*=10)  // fore digit we have 89 89/100 not valid loopntrun
    {
      Count__Sort(a,place);
    }

  }
  static void Count__Sort(int[] a,int place)
  {
    int n  = a.length;
    int max=f(a);
    // int[] freq=new int[max+1];
    int[] freq = new int [10]; // we have only 0 to 9 digit are possible over there
    
    for (int i=0;i<a.length;i++)
    {
      freq[(a[i]/place)%10]++;  //(a[i]/place)%10 it gives place value like at 10 1 and 100's etc
    }

    // preefix array for stabiility
    for (int i=1;i<freq.length;i++)
    {
        freq[i]=freq[i]+freq[i-1];
    }

    int[] ans = new int[n];
    for (int i=n-1;i>=0;i--)
    {
      int idx = freq[(a[i]/place)%10]-1;
      ans[idx]=a[i];
      freq[(a[i]/place)%10]--;

    } 
    for (int i=0;i<n;i++)
    {
      a[i]=ans[i];
    }
  }
  
}
